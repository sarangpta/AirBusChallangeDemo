{"ast":null,"code":"import _asyncToGenerator from \"E:\\\\My Projects\\\\UxAirbusChallange\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { getCompatibleStyle as t, adoptStyles as i } from \"./css-tag.js\";\nexport { CSSResult, adoptStyles, css, getCompatibleStyle, supportsAdoptingStyleSheets, unsafeCSS } from \"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nvar s;\n\nconst e = window.trustedTypes,\n      r = e ? e.emptyScript : \"\",\n      h = window.reactiveElementPolyfillSupport,\n      o = {\n  toAttribute(t, i) {\n    switch (i) {\n      case Boolean:\n        t = t ? r : null;\n        break;\n\n      case Object:\n      case Array:\n        t = null == t ? t : JSON.stringify(t);\n    }\n\n    return t;\n  },\n\n  fromAttribute(t, i) {\n    let s = t;\n\n    switch (i) {\n      case Boolean:\n        s = null !== t;\n        break;\n\n      case Number:\n        s = null === t ? null : Number(t);\n        break;\n\n      case Object:\n      case Array:\n        try {\n          s = JSON.parse(t);\n        } catch (t) {\n          s = null;\n        }\n\n    }\n\n    return s;\n  }\n\n},\n      n = (t, i) => i !== t && (i == i || t == t),\n      l = {\n  attribute: !0,\n  type: String,\n  converter: o,\n  reflect: !1,\n  hasChanged: n\n};\n\nclass a extends HTMLElement {\n  constructor() {\n    super(), this._$Et = new Map(), this.isUpdatePending = !1, this.hasUpdated = !1, this._$Ei = null, this.o();\n  }\n\n  static addInitializer(t) {\n    var i;\n    null !== (i = this.l) && void 0 !== i || (this.l = []), this.l.push(t);\n  }\n\n  static get observedAttributes() {\n    this.finalize();\n    const t = [];\n    return this.elementProperties.forEach((i, s) => {\n      const e = this._$Eh(s, i);\n\n      void 0 !== e && (this._$Eu.set(e, s), t.push(e));\n    }), t;\n  }\n\n  static createProperty(t, i = l) {\n    if (i.state && (i.attribute = !1), this.finalize(), this.elementProperties.set(t, i), !i.noAccessor && !this.prototype.hasOwnProperty(t)) {\n      const s = \"symbol\" == typeof t ? Symbol() : \"__\" + t,\n            e = this.getPropertyDescriptor(t, s, i);\n      void 0 !== e && Object.defineProperty(this.prototype, t, e);\n    }\n  }\n\n  static getPropertyDescriptor(t, i, s) {\n    return {\n      get() {\n        return this[i];\n      },\n\n      set(e) {\n        const r = this[t];\n        this[i] = e, this.requestUpdate(t, r, s);\n      },\n\n      configurable: !0,\n      enumerable: !0\n    };\n  }\n\n  static getPropertyOptions(t) {\n    return this.elementProperties.get(t) || l;\n  }\n\n  static finalize() {\n    if (this.hasOwnProperty(\"finalized\")) return !1;\n    this.finalized = !0;\n    const t = Object.getPrototypeOf(this);\n\n    if (t.finalize(), this.elementProperties = new Map(t.elementProperties), this._$Eu = new Map(), this.hasOwnProperty(\"properties\")) {\n      const t = this.properties,\n            i = [...Object.getOwnPropertyNames(t), ...Object.getOwnPropertySymbols(t)];\n\n      for (const s of i) this.createProperty(s, t[s]);\n    }\n\n    return this.elementStyles = this.finalizeStyles(this.styles), !0;\n  }\n\n  static finalizeStyles(i) {\n    const s = [];\n\n    if (Array.isArray(i)) {\n      const e = new Set(i.flat(1 / 0).reverse());\n\n      for (const i of e) s.unshift(t(i));\n    } else void 0 !== i && s.push(t(i));\n\n    return s;\n  }\n\n  static _$Eh(t, i) {\n    const s = i.attribute;\n    return !1 === s ? void 0 : \"string\" == typeof s ? s : \"string\" == typeof t ? t.toLowerCase() : void 0;\n  }\n\n  o() {\n    var t;\n    this._$Ep = new Promise(t => this.enableUpdating = t), this._$AL = new Map(), this._$Em(), this.requestUpdate(), null === (t = this.constructor.l) || void 0 === t || t.forEach(t => t(this));\n  }\n\n  addController(t) {\n    var i, s;\n    (null !== (i = this._$Eg) && void 0 !== i ? i : this._$Eg = []).push(t), void 0 !== this.renderRoot && this.isConnected && (null === (s = t.hostConnected) || void 0 === s || s.call(t));\n  }\n\n  removeController(t) {\n    var i;\n    null === (i = this._$Eg) || void 0 === i || i.splice(this._$Eg.indexOf(t) >>> 0, 1);\n  }\n\n  _$Em() {\n    this.constructor.elementProperties.forEach((t, i) => {\n      this.hasOwnProperty(i) && (this._$Et.set(i, this[i]), delete this[i]);\n    });\n  }\n\n  createRenderRoot() {\n    var t;\n    const s = null !== (t = this.shadowRoot) && void 0 !== t ? t : this.attachShadow(this.constructor.shadowRootOptions);\n    return i(s, this.constructor.elementStyles), s;\n  }\n\n  connectedCallback() {\n    var t;\n    void 0 === this.renderRoot && (this.renderRoot = this.createRenderRoot()), this.enableUpdating(!0), null === (t = this._$Eg) || void 0 === t || t.forEach(t => {\n      var i;\n      return null === (i = t.hostConnected) || void 0 === i ? void 0 : i.call(t);\n    });\n  }\n\n  enableUpdating(t) {}\n\n  disconnectedCallback() {\n    var t;\n    null === (t = this._$Eg) || void 0 === t || t.forEach(t => {\n      var i;\n      return null === (i = t.hostDisconnected) || void 0 === i ? void 0 : i.call(t);\n    });\n  }\n\n  attributeChangedCallback(t, i, s) {\n    this._$AK(t, s);\n  }\n\n  _$ES(t, i, s = l) {\n    var e, r;\n\n    const h = this.constructor._$Eh(t, s);\n\n    if (void 0 !== h && !0 === s.reflect) {\n      const n = (null !== (r = null === (e = s.converter) || void 0 === e ? void 0 : e.toAttribute) && void 0 !== r ? r : o.toAttribute)(i, s.type);\n      this._$Ei = t, null == n ? this.removeAttribute(h) : this.setAttribute(h, n), this._$Ei = null;\n    }\n  }\n\n  _$AK(t, i) {\n    var s, e, r;\n\n    const h = this.constructor,\n          n = h._$Eu.get(t);\n\n    if (void 0 !== n && this._$Ei !== n) {\n      const t = h.getPropertyOptions(n),\n            l = t.converter,\n            a = null !== (r = null !== (e = null === (s = l) || void 0 === s ? void 0 : s.fromAttribute) && void 0 !== e ? e : \"function\" == typeof l ? l : null) && void 0 !== r ? r : o.fromAttribute;\n      this._$Ei = n, this[n] = a(i, t.type), this._$Ei = null;\n    }\n  }\n\n  requestUpdate(t, i, s) {\n    let e = !0;\n    void 0 !== t && (((s = s || this.constructor.getPropertyOptions(t)).hasChanged || n)(this[t], i) ? (this._$AL.has(t) || this._$AL.set(t, i), !0 === s.reflect && this._$Ei !== t && (void 0 === this._$EC && (this._$EC = new Map()), this._$EC.set(t, s))) : e = !1), !this.isUpdatePending && e && (this._$Ep = this._$E_());\n  }\n\n  _$E_() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.isUpdatePending = !0;\n\n      try {\n        yield _this._$Ep;\n      } catch (t) {\n        Promise.reject(t);\n      }\n\n      const t = _this.scheduleUpdate();\n\n      return null != t && (yield t), !_this.isUpdatePending;\n    })();\n  }\n\n  scheduleUpdate() {\n    return this.performUpdate();\n  }\n\n  performUpdate() {\n    var t;\n    if (!this.isUpdatePending) return;\n    this.hasUpdated, this._$Et && (this._$Et.forEach((t, i) => this[i] = t), this._$Et = void 0);\n    let i = !1;\n    const s = this._$AL;\n\n    try {\n      i = this.shouldUpdate(s), i ? (this.willUpdate(s), null === (t = this._$Eg) || void 0 === t || t.forEach(t => {\n        var i;\n        return null === (i = t.hostUpdate) || void 0 === i ? void 0 : i.call(t);\n      }), this.update(s)) : this._$EU();\n    } catch (t) {\n      throw i = !1, this._$EU(), t;\n    }\n\n    i && this._$AE(s);\n  }\n\n  willUpdate(t) {}\n\n  _$AE(t) {\n    var i;\n    null === (i = this._$Eg) || void 0 === i || i.forEach(t => {\n      var i;\n      return null === (i = t.hostUpdated) || void 0 === i ? void 0 : i.call(t);\n    }), this.hasUpdated || (this.hasUpdated = !0, this.firstUpdated(t)), this.updated(t);\n  }\n\n  _$EU() {\n    this._$AL = new Map(), this.isUpdatePending = !1;\n  }\n\n  get updateComplete() {\n    return this.getUpdateComplete();\n  }\n\n  getUpdateComplete() {\n    return this._$Ep;\n  }\n\n  shouldUpdate(t) {\n    return !0;\n  }\n\n  update(t) {\n    void 0 !== this._$EC && (this._$EC.forEach((t, i) => this._$ES(i, this[i], t)), this._$EC = void 0), this._$EU();\n  }\n\n  updated(t) {}\n\n  firstUpdated(t) {}\n\n}\n\na.finalized = !0, a.elementProperties = new Map(), a.elementStyles = [], a.shadowRootOptions = {\n  mode: \"open\"\n}, null == h || h({\n  ReactiveElement: a\n}), (null !== (s = globalThis.reactiveElementVersions) && void 0 !== s ? s : globalThis.reactiveElementVersions = []).push(\"1.3.1\");\nexport { a as ReactiveElement, o as defaultConverter, n as notEqual }; //# sourceMappingURL=reactive-element.js.map","map":null,"metadata":{},"sourceType":"module"}